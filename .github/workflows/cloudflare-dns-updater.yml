# 文件名: .github/workflows/cloudflare-dns-updater.yml
# 描述: 一个 GitHub Action 工作流程，用于定时从 API 获取 IP，清空旧记录，然后更新到 Cloudflare DNS。

name: Sync IPs to Cloudflare DNS

on:
  # 允许您在 Actions 标签页手动触发此工作流程
  workflow_dispatch:

  # 设置定时任务，以下示例为每小时执行一次
  # 您可以根据需求修改 cron 表达式
  schedule:
    - cron: '0 * * * *'

jobs:
  sync-ips:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Update Cloudflare DNS Records
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
          IP_API_URL: ${{ secrets.IP_API_URL }}
          CF_DNS_RECORD_NAME: ${{ secrets.CF_DNS_RECORD_NAME }}
        run: |
          # 检查必要的 secrets 是否已设置
          if [ -z "$CF_API_TOKEN" ] || [ -z "$CF_ZONE_ID" ] || [ -z "$IP_API_URL" ] || [ -z "$CF_DNS_RECORD_NAME" ]; then
            echo "错误：必要的 Secrets 未配置。请检查仓库的 Secrets 设置。"
            echo "需要配置: CF_API_TOKEN, CF_ZONE_ID, IP_API_URL, CF_DNS_RECORD_NAME"
            exit 1
          fi

          echo "步骤 1: 正在从 API 获取 IP 列表..."
          ip_list=$(curl -sf "$IP_API_URL")
          # 安全检查：如果 API 返回空值，则终止操作以防意外删除所有记录
          if [ -z "$ip_list" ]; then
            echo "从 API 获取 IP 列表失败或列表为空。为安全起见，终止操作。"
            exit 1
          fi
          echo "获取到的 IP 列表: "
          echo "$ip_list"

          echo "步骤 2: 正在从 Cloudflare 获取并删除旧的 DNS 记录..."
          # 获取与域名匹配的所有 A 记录的 ID
          record_ids=$(curl -s -X GET "https://api.cloudflare.com/client/v4/zones/$CF_ZONE_ID/dns_records?type=A&name=$CF_DNS_RECORD_NAME" \
            -H "Authorization: Bearer $CF_API_TOKEN" \
            -H "Content-Type: application/json" | jq -r '.result[].id')

          if [ -z "$record_ids" ]; then
            echo "在 Cloudflare 上未找到需要删除的旧记录。"
          else
            echo "找到以下需要删除的记录 ID:"
            echo "$record_ids"
            # 循环删除每一条旧记录
            for record_id in $record_ids; do
              echo "正在删除记录 ID: $record_id ..."
              delete_result=$(curl -s -X DELETE "https://api.cloudflare.com/client/v4/zones/$CF_ZONE_ID/dns_records/$record_id" \
                -H "Authorization: Bearer $CF_API_TOKEN" \
                -H "Content-Type: application/json")
              
              success=$(echo "$delete_result" | jq -r '.success')
              if [ "$success" = "true" ]; then
                echo "成功删除记录 ID: $record_id。"
              else
                echo "删除记录 ID: $record_id 失败。API 响应: $delete_result"
              fi
            done
          fi

          echo "步骤 3: 正在添加从 API 获取的新 IP 记录..."
          for ip in $ip_list; do
            if ! [[ $ip =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "跳过无效的 IP 地址: $ip"
              continue
            fi
            
            echo "正在添加 IP $ip 到 Cloudflare..."
            # ttl=60 (1分钟), proxied=false (仅DNS)
            add_result=$(curl -s -X POST "https://api.cloudflare.com/client/v4/zones/$CF_ZONE_ID/dns_records" \
              -H "Authorization: Bearer $CF_API_TOKEN" \
              -H "Content-Type: application/json" \
              --data "{\"type\":\"A\",\"name\":\"$CF_DNS_RECORD_NAME\",\"content\":\"$ip\",\"ttl\":60,\"proxied\":false}")
            
            success=$(echo "$add_result" | jq -r '.success')
            if [ "$success" = "true" ]; then
              echo "成功添加 IP $ip 到 Cloudflare。"
            else
              echo "添加 IP $ip 失败。API 响应: $add_result"
            fi
          done

          echo "DNS 同步任务完成。"
